{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ShoppingCartService {\n  constructor() {\n    this.cartItems = [];\n    this.cartItemsSubject = new BehaviorSubject(this.cartItems);\n  }\n  getCartItemsObservable() {\n    return this.cartItemsSubject.asObservable();\n  }\n  getCartItems() {\n    return this.cartItems;\n  }\n  addToCart(product) {\n    this.cartItems.push(product);\n    this.cartItemsSubject.next([...this.cartItems]);\n  }\n  clearCart() {\n    this.cartItems = [];\n    this.cartItemsSubject.next([]);\n  }\n  calculateTotal() {\n    const total = this.cartItems.reduce((acc, item) => acc + item.price, 0);\n    console.log('Cart total:', total);\n    return total;\n  }\n}\nShoppingCartService.ɵfac = function ShoppingCartService_Factory(t) {\n  return new (t || ShoppingCartService)();\n};\nShoppingCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ShoppingCartService,\n  factory: ShoppingCartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,mBAAmB;EAHhCC;IAIU,cAAS,GAAc,EAAE;IACzB,qBAAgB,GAAG,IAAIF,eAAe,CAAY,IAAI,CAACG,SAAS,CAAC;;EAEzEC,sBAAsB;IACpB,OAAO,IAAI,CAACC,gBAAgB,CAACC,YAAY,EAAE;EAC7C;EAEAC,YAAY;IACV,OAAO,IAAI,CAACJ,SAAS;EACvB;EAEAK,SAAS,CAACC,OAAgB;IACxB,IAAI,CAACN,SAAS,CAACO,IAAI,CAACD,OAAO,CAAC;IAC5B,IAAI,CAACJ,gBAAgB,CAACM,IAAI,CAAC,CAAC,GAAG,IAAI,CAACR,SAAS,CAAC,CAAC;EACjD;EAEAS,SAAS;IACP,IAAI,CAACT,SAAS,GAAG,EAAE;IACnB,IAAI,CAACE,gBAAgB,CAACM,IAAI,CAAC,EAAE,CAAC;EAChC;EAEAE,cAAc;IACZ,MAAMC,KAAK,GAAG,IAAI,CAACX,SAAS,CAACY,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,KAAK,EAAE,CAAC,CAAC;IACvEC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEN,KAAK,CAAC;IACjC,OAAOA,KAAK;EACd;;AA1BWb,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAoB,SAAnBpB,mBAAmB;EAAAqB,YAFlB;AAAM","names":["BehaviorSubject","ShoppingCartService","constructor","cartItems","getCartItemsObservable","cartItemsSubject","asObservable","getCartItems","addToCart","product","push","next","clearCart","calculateTotal","total","reduce","acc","item","price","console","log","factory","providedIn"],"sourceRoot":"","sources":["F:\\Magazin Online\\Magazin Online\\ClientApp\\src\\app\\shopping-cart.service.ts"],"sourcesContent":["// src/app/shopping-cart.service.ts\nimport { Injectable } from '@angular/core';\nimport { Product } from './product.service';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShoppingCartService {\n  private cartItems: Product[] = [];\n  private cartItemsSubject = new BehaviorSubject<Product[]>(this.cartItems);\n\n  getCartItemsObservable() {\n    return this.cartItemsSubject.asObservable();\n  }\n\n  getCartItems(): Product[] {\n    return this.cartItems;\n  }\n\n  addToCart(product: Product): void {\n    this.cartItems.push(product);\n    this.cartItemsSubject.next([...this.cartItems]);\n  }\n\n  clearCart(): void {\n    this.cartItems = [];\n    this.cartItemsSubject.next([]);\n  }\n\n  calculateTotal(): number {\n    const total = this.cartItems.reduce((acc, item) => acc + item.price, 0);\n    console.log('Cart total:', total);\n    return total;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}