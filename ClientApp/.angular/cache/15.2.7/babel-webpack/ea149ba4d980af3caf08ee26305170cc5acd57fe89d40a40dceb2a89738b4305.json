{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../shopping-cart.service\";\nimport * as i2 from \"@angular/common\";\nfunction ShoppingCartComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"h6\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 5);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 5);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Specifications: \", item_r1.specifications, \"\");\n  }\n}\nexport class ShoppingCartComponent {\n  constructor(cartService, cdr) {\n    this.cartService = cartService;\n    this.cdr = cdr;\n    this.cartItems = [];\n    this.cartTotal = 0;\n  }\n  ngOnInit() {\n    this.cartService.getTotalObservable().subscribe(total => {\n      this.cartTotal = total;\n      this.cdr.detectChanges();\n    });\n    this.updateCart();\n  }\n  updateCart() {\n    this.cartItems = this.cartService.getCartItems();\n  }\n  checkout() {\n    // Implement your checkout logic here\n    // Clear the cart after checkout\n    this.cartService.clearCart();\n    this.updateCart();\n  }\n}\nShoppingCartComponent.ɵfac = function ShoppingCartComponent_Factory(t) {\n  return new (t || ShoppingCartComponent)(i0.ɵɵdirectiveInject(i1.ShoppingCartService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nShoppingCartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShoppingCartComponent,\n  selectors: [[\"app-shopping-cart\"]],\n  decls: 9,\n  vars: 5,\n  consts: [[1, \"container\", \"mt-5\"], [\"class\", \"border p-3 mb-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"border\", \"p-3\", \"mb-3\"], [1, \"card-subtitle\", \"mb-2\", \"text-muted\"], [1, \"card-text\"]],\n  template: function ShoppingCartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Shopping Cart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, ShoppingCartComponent_div_3_Template, 7, 3, \"div\", 1);\n      i0.ɵɵelementStart(4, \"p\");\n      i0.ɵɵtext(5);\n      i0.ɵɵpipe(6, \"number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function ShoppingCartComponent_Template_button_click_7_listener() {\n        return ctx.checkout();\n      });\n      i0.ɵɵtext(8, \"Checkout\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cartItems);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Total: $ \", i0.ɵɵpipeBind2(6, 2, ctx.cartTotal, \"1.2-2\"), \"\");\n    }\n  },\n  dependencies: [i2.NgForOf, i2.DecimalPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAGEA,8BAA4D;IAChBA,YAAe;IAAAA,iBAAK;IAC9DA,4BAAqB;IAAAA,YAAsB;IAAAA,iBAAI;IAC/CA,4BAAqB;IAAAA,YAAyC;IAAAA,iBAAI;;;;IAFxBA,eAAe;IAAfA,kCAAe;IACpCA,eAAsB;IAAtBA,yCAAsB;IACtBA,eAAyC;IAAzCA,qEAAyC;;;ACIlE,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,WAAgC,EAAUC,GAAsB;IAAhE,gBAAW,GAAXD,WAAW;IAA+B,QAAG,GAAHC,GAAG;IAHjE,cAAS,GAAc,EAAE;IACzB,cAAS,GAAW,CAAC;EAEmE;EAExFC,QAAQ;IACN,IAAI,CAACF,WAAW,CAACG,kBAAkB,EAAE,CAACC,SAAS,CAAEC,KAAK,IAAI;MACxD,IAAI,CAACC,SAAS,GAAGD,KAAK;MACtB,IAAI,CAACJ,GAAG,CAACM,aAAa,EAAE;IAC1B,CAAC,CAAC;IAEF,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAU;IACR,IAAI,CAACC,SAAS,GAAG,IAAI,CAACT,WAAW,CAACU,YAAY,EAAE;EAClD;EAEAC,QAAQ;IACN;IAEA;IACA,IAAI,CAACX,WAAW,CAACY,SAAS,EAAE;IAC5B,IAAI,CAACJ,UAAU,EAAE;EACnB;;AAzBWV,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCpB,8BAA4B;MACtBA,6BAAa;MAAAA,iBAAK;MACtBA,sEAIM;MACNA,yBAAG;MAAAA,YAAyC;;MAAAA,iBAAI;MAChDA,iCAAqD;MAA7CA;QAAA,OAASqB,cAAU;MAAA,EAAC;MAAyBrB,wBAAQ;MAAAA,iBAAS;;;MANhDA,eAAY;MAAZA,uCAAY;MAK/BA,eAAyC;MAAzCA,oFAAyC","names":["i0","ShoppingCartComponent","constructor","cartService","cdr","ngOnInit","getTotalObservable","subscribe","total","cartTotal","detectChanges","updateCart","cartItems","getCartItems","checkout","clearCart","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["F:\\Magazin Online\\Magazin Online\\ClientApp\\src\\app\\shopping-cart\\shopping-cart.component.html","F:\\Magazin Online\\Magazin Online\\ClientApp\\src\\app\\shopping-cart\\shopping-cart.component.ts"],"sourcesContent":["<!-- src/app/shopping-cart/shopping-cart.component.html -->\r\n<div class=\"container mt-5\">\r\n  <h2>Shopping Cart</h2>\r\n  <div *ngFor=\"let item of cartItems\" class=\"border p-3 mb-3\">\r\n    <h6 class=\"card-subtitle mb-2 text-muted\">{{ item.name }}</h6>\r\n    <p class=\"card-text\">{{ item.description }}</p>\r\n    <p class=\"card-text\">Specifications: {{ item.specifications }}</p>\r\n  </div>\r\n  <p>Total: $ {{ cartTotal | number:'1.2-2' }}</p>\r\n  <button (click)=\"checkout()\" class=\"btn btn-success\">Checkout</button>\r\n</div>\r\n","// src/app/shopping-cart/shopping-cart.component.ts\nimport { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { ShoppingCartService } from '../shopping-cart.service';\nimport { Product } from '../product.service';\n\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.css'],\n})\nexport class ShoppingCartComponent implements OnInit {\n  cartItems: Product[] = [];\n  cartTotal: number = 0;\n\n  constructor(private cartService: ShoppingCartService, private cdr: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.cartService.getTotalObservable().subscribe((total) => {\n      this.cartTotal = total;\n      this.cdr.detectChanges();\n    });\n\n    this.updateCart();\n  }\n\n  updateCart(): void {\n    this.cartItems = this.cartService.getCartItems();\n  }\n\n  checkout(): void {\n    // Implement your checkout logic here\n\n    // Clear the cart after checkout\n    this.cartService.clearCart();\n    this.updateCart();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}