{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:44482/products';\n  }\n  getProducts() {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.get(this.apiUrl, {\n      headers\n    }).pipe(catchError(error => {\n      console.error(error);\n      throw error;\n    }));\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,UAAU,QAAQ,gBAAgB;;;AAI3C,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,kCAAkC;EAEX;EAExCC,WAAW;IACT,MAAMC,OAAO,GAAG,IAAIN,WAAW,EAAE,CAACO,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACzE,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAY,IAAI,CAACC,MAAM,EAAE;MAAEH;IAAO,CAAE,CAAC,CACtDI,IAAI,CACHT,UAAU,CAAEU,KAAU,IAAI;MACxBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB,MAAMA,KAAK;IACb,CAAC,CAAC,CACH;EACL;;AAdWT,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAW,SAAdX,cAAc;EAAAY,YAFb;AAAM","names":["HttpHeaders","catchError","ProductService","constructor","http","getProducts","headers","set","get","apiUrl","pipe","error","console","factory","providedIn"],"sourceRoot":"","sources":["F:\\Magazin Online\\Magazin Online\\ClientApp\\src\\app\\product.service.ts"],"sourcesContent":["// src/app/product.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private apiUrl = 'https://localhost:44482/products';\n\n  constructor(private http: HttpClient) { }\n\n  getProducts(): Observable<Product[]> {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.get<Product[]>(this.apiUrl, { headers })\n      .pipe(\n        catchError((error: any) => {\n          console.error(error);\n          throw error;\n        })\n      );\n  }\n}\nexport interface Product {\n  id: number;\n  name: string;\n  category: string;\n  description: string;\n  specifications: string;\n  price: number;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}