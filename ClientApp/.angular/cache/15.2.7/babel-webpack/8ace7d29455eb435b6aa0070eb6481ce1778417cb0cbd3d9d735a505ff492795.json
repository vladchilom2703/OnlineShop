{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ShoppingCartService {\n  constructor() {\n    this.cartItems = [];\n  }\n  getCartItems() {\n    return this.cartItems;\n  }\n  addToCart(product) {\n    this.cartItems.push(product);\n  }\n  clearCart() {\n    this.cartItems = [];\n  }\n  calculateTotal() {\n    const total = this.cartItems.reduce((acc, item) => acc + item.price, 0);\n    console.log('Cart total:', total);\n    return total;\n  }\n}\nShoppingCartService.ɵfac = function ShoppingCartService_Factory(t) {\n  return new (t || ShoppingCartService)();\n};\nShoppingCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ShoppingCartService,\n  factory: ShoppingCartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,mBAAmB;EAHhCC;IAIU,cAAS,GAAc,EAAE;;EAEjCC,YAAY;IACV,OAAO,IAAI,CAACC,SAAS;EACvB;EAEAC,SAAS,CAACC,OAAgB;IACxB,IAAI,CAACF,SAAS,CAACG,IAAI,CAACD,OAAO,CAAC;EAC9B;EAEAE,SAAS;IACP,IAAI,CAACJ,SAAS,GAAG,EAAE;EACrB;EAEAK,cAAc;IACZ,MAAMC,KAAK,GAAG,IAAI,CAACN,SAAS,CAACO,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,KAAK,EAAE,CAAC,CAAC;IACvEC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEN,KAAK,CAAC;IACjC,OAAOA,KAAK;EACd;;AAnBWT,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAgB,SAAnBhB,mBAAmB;EAAAiB,YAFlB;AAAM","names":["ShoppingCartService","constructor","getCartItems","cartItems","addToCart","product","push","clearCart","calculateTotal","total","reduce","acc","item","price","console","log","factory","providedIn"],"sourceRoot":"","sources":["F:\\Magazin Online\\Magazin Online\\ClientApp\\src\\app\\shopping-cart.service.ts"],"sourcesContent":["// src/app/shopping-cart.service.ts\nimport { Injectable } from '@angular/core';\nimport { Product } from './product.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShoppingCartService {\n  private cartItems: Product[] = [];\n\n  getCartItems(): Product[] {\n    return this.cartItems;\n  }\n\n  addToCart(product: Product): void {\n    this.cartItems.push(product);\n  }\n\n  clearCart(): void {\n    this.cartItems = [];\n  }\n\n  calculateTotal(): number {\n    const total = this.cartItems.reduce((acc, item) => acc + item.price, 0);\n    console.log('Cart total:', total);\n    return total;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}