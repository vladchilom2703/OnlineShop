{"ast":null,"code":"import _asyncToGenerator from \"F:/Magazin Online/Magazin Online/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ShoppingCartService {\n  constructor() {\n    this.cartItems = [];\n    this.cartItemsSubject = new BehaviorSubject(this.cartItems);\n    this.totalSubject = new BehaviorSubject(0);\n  }\n  getCartItemsObservable() {\n    return this.cartItemsSubject.asObservable();\n  }\n  getTotalObservable() {\n    return this.totalSubject.asObservable();\n  }\n  getCartItems() {\n    return this.cartItems;\n  }\n  addToCart(product) {\n    this.cartItems.push(product);\n    this.cartItemsSubject.next([...this.cartItems]);\n    this.calculateTotalAsync().then(total => {\n      this.totalSubject.next(total);\n    });\n  }\n  clearCart() {\n    this.cartItems = [];\n    this.cartItemsSubject.next([]);\n    this.totalSubject.next(0);\n  }\n  calculateTotalAsync() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return new Promise(resolve => {\n        const total = _this.cartItems.reduce((acc, item) => acc + item.price, 0);\n        console.log('Cart total:', total);\n        resolve(total);\n      });\n    })();\n  }\n}\nShoppingCartService.ɵfac = function ShoppingCartService_Factory(t) {\n  return new (t || ShoppingCartService)();\n};\nShoppingCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ShoppingCartService,\n  factory: ShoppingCartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAGA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,mBAAmB;EAHhCC;IAIU,cAAS,GAAc,EAAE;IACzB,qBAAgB,GAAG,IAAIF,eAAe,CAAY,IAAI,CAACG,SAAS,CAAC;IACjE,iBAAY,GAAG,IAAIH,eAAe,CAAS,CAAC,CAAC;;EAErDI,sBAAsB;IACpB,OAAO,IAAI,CAACC,gBAAgB,CAACC,YAAY,EAAE;EAC7C;EAEAC,kBAAkB;IAChB,OAAO,IAAI,CAACC,YAAY,CAACF,YAAY,EAAE;EACzC;EAEAG,YAAY;IACV,OAAO,IAAI,CAACN,SAAS;EACvB;EAEAO,SAAS,CAACC,OAAgB;IACxB,IAAI,CAACR,SAAS,CAACS,IAAI,CAACD,OAAO,CAAC;IAC5B,IAAI,CAACN,gBAAgB,CAACQ,IAAI,CAAC,CAAC,GAAG,IAAI,CAACV,SAAS,CAAC,CAAC;IAE/C,IAAI,CAACW,mBAAmB,EAAE,CAACC,IAAI,CAAEC,KAAK,IAAI;MACxC,IAAI,CAACR,YAAY,CAACK,IAAI,CAACG,KAAK,CAAC;IAC/B,CAAC,CAAC;EACJ;EAEAC,SAAS;IACP,IAAI,CAACd,SAAS,GAAG,EAAE;IACnB,IAAI,CAACE,gBAAgB,CAACQ,IAAI,CAAC,EAAE,CAAC;IAC9B,IAAI,CAACL,YAAY,CAACK,IAAI,CAAC,CAAC,CAAC;EAC3B;EAEMC,mBAAmB;IAAA;IAAA;MACvB,OAAO,IAAII,OAAO,CAAEC,OAAO,IAAI;QAC7B,MAAMH,KAAK,GAAG,KAAI,CAACb,SAAS,CAACiB,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,KAAK,EAAE,CAAC,CAAC;QACvEC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAET,KAAK,CAAC;QACjCG,OAAO,CAACH,KAAK,CAAC;MAChB,CAAC,CAAC;IAAC;EACL;;AAtCWf,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAyB,SAAnBzB,mBAAmB;EAAA0B,YAFlB;AAAM","names":["BehaviorSubject","ShoppingCartService","constructor","cartItems","getCartItemsObservable","cartItemsSubject","asObservable","getTotalObservable","totalSubject","getCartItems","addToCart","product","push","next","calculateTotalAsync","then","total","clearCart","Promise","resolve","reduce","acc","item","price","console","log","factory","providedIn"],"sourceRoot":"","sources":["F:\\Magazin Online\\Magazin Online\\ClientApp\\src\\app\\shopping-cart.service.ts"],"sourcesContent":["// src/app/shopping-cart.service.ts\nimport { Injectable } from '@angular/core';\nimport { Product } from './product.service';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShoppingCartService {\n  private cartItems: Product[] = [];\n  private cartItemsSubject = new BehaviorSubject<Product[]>(this.cartItems);\n  private totalSubject = new BehaviorSubject<number>(0);\n\n  getCartItemsObservable() {\n    return this.cartItemsSubject.asObservable();\n  }\n\n  getTotalObservable() {\n    return this.totalSubject.asObservable();\n  }\n\n  getCartItems(): Product[] {\n    return this.cartItems;\n  }\n\n  addToCart(product: Product): void {\n    this.cartItems.push(product);\n    this.cartItemsSubject.next([...this.cartItems]);\n\n    this.calculateTotalAsync().then((total) => {\n      this.totalSubject.next(total);\n    });\n  }\n\n  clearCart(): void {\n    this.cartItems = [];\n    this.cartItemsSubject.next([]);\n    this.totalSubject.next(0);\n  }\n\n  async calculateTotalAsync(): Promise<number> {\n    return new Promise((resolve) => {\n      const total = this.cartItems.reduce((acc, item) => acc + item.price, 0);\n      console.log('Cart total:', total);\n      resolve(total);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}